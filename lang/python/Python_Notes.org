# In Emacs org-mode: before exporting, comment this out START
;; Local Variables:
;; ispell-check-comments: exclusive
;; ispell-local-dictionary: "english"
;; End:
# In Emacs org-mode: before exporting, comment this out FINISH

# Org-mode Export LaTeX Customization Notes:
# - Interpret 'bla_bla' as LaTeX Math bla subscript bla: #+OPTIONS ^:t. Interpret literally bla_bla: ^:nil.
# - org export: turn off heading -> section numbering: #+OPTIONS: num:nil
# - org export: change list numbering to alphabetical, sources:
#   - https://orgmode.org/manual/Plain-lists-in-LaTeX-export.html
#   - https://tex.stackexchange.com/a/129960
#   - must be inserted before each list:
#     #+ATTR_LATEX: :environment enumerate
#     #+ATTR_LATEX: :options [label=\alph*)]
# - allow org to recognize alphabetical lists a)...: M-x customize-variable org-list-allow-alphabetical


# -----------------------
# General Export Options:
#+OPTIONS: ^:nil ':nil *:t -:t ::t <:t H:3 \n:nil arch:headline 
#+OPTIONS: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+OPTIONS: email:nil f:t inline:t p:nil pri:nil prop:nil stat:t tags:t
#+OPTIONS: tasks:t tex:t timestamp:t title:t todo:t |:t

#+OPTIONS: author:nil
#+OPTIONS: num:nil # disable export latex section numbering for org headings
#+OPTIONS: toc:nil # no table of contents (doesn't work if num:nil)

#+TITLE: Python_Notes
#+DATE: <2019-01-14 Mon>
#+AUTHOR: Johannes Wasmer
# #+EMAIL: johannes.wasmer@gmail.com
#+LANGUAGE: de
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 25.2.2 (Org mode 9.1.13)

# ---------------------
# LaTeX Export Options:
#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS:
#+LATEX_HEADER: \usepackage[english]{babel}
#+LATEX_HEADER: \usepackage[top=0.5in,bottom=0.5in,left=1in,right=1in,includeheadfoot]{geometry} % wider page; load BEFORE fancyhdr
#+LATEX_HEADER: \usepackage[inline]{enumitem} % for customization of itemize, enumerate envs
#+LATEX_HEADER: \usepackage{color}
#+LATEX_HEADER:
#+LATEX_HEADER_EXTRA:
#+DESCRIPTION:
#+KEYWORDS:
#+SUBTITLE: 
#+LATEX_COMPILER: pdflatex
#+DATE: 

* COMMENT [[file:~/Desktop/Archive/Reference/lang/lang.org][master file]]
* [[file:Python_Matplotlib_Notes.org][Matplotlib Notes]]
* [[https://www.python.org/dev/peps/pep-0008/#naming-conventions][PEP8 Naming Conventions]]
| where                | what                         | example/remark                                              |
|----------------------+------------------------------+-------------------------------------------------------------|
| module               | short, all-lowercase names   |                                                             |
|----------------------+------------------------------+-------------------------------------------------------------|
| constant             | uppercase, underscore        |                                                             |
| function, variable   | lowercase_underscore         | mixedCase only with old modules which use that              |
| global (variable)    | like ~function~              | prevent import: use ~__all__~ mechanism or (old) =_= prefix |
|----------------------+------------------------------+-------------------------------------------------------------|
| ~class~              | use the CapWords convention  |                                                             |
| method, instance var | like ~function~              | non-public: prefix =_=, subclassing conlict: prefix =__=    |
| exception            | like ~class~, suffix =Error= |                                                             |
|----------------------+------------------------------+-------------------------------------------------------------|
| ~TypeVar~            | use short CapWords           | =T, AnyStr, Num=                                            |
|----------------------+------------------------------+-------------------------------------------------------------|
* [[file:Python_Snippets_Notes.org][Snippets]]
* External resources
** all topics
*** [[file:~/Desktop/Archive/Reference/lang/lang.org::*sentdex tutorials python][sentdex tutorials python]]
** python [[https://docs.python.org/3/library/][STL]]
*** [[https://docs.python.org/3/library/subprocess.html][subprocess]]
- [[http://queirozf.com/entries/python-3-subprocess-examples#run-command-and-capture-output][queizrof.com python3 subprocess examples]]
** libraries
*** data workflow/pipeline libs
**** [[https://github.com/spotify/luigi][luigi by spotify]]
**** [[https://github.com/quantumblacklabs/kedro][kedros by mckinsey]]
*** testing
**** [[https://tox.readthedocs.io/en/latest/][tox]] - standardize testing in Python
** docstring / Python code documentation
- [[https://stackoverflow.com/a/24385103][Python docstring formats Comparison]]: Epytext, reST (pycharm default), google
  docstring, numpydoc, tool *pyment for docstring conversion*.
** compilers
*** [[https://numba.pydata.org/][numba]] 
- [[https://fossbytes.com/python-c-go-solve-n-queens-problem/?fbclid=IwAR0NPce5DsccpucnWdpVCMeaI1qEn2DZBFbTLicszwlwuxSy30d7cvNS_Ck][Python’s Execution Time Is Close To C++ And Go Language: Study]] with numba. <2020-01-23 Thu>
** performance
- [[https://fossbytes.com/python-c-go-solve-n-queens-problem/?fbclid=IwAR0NPce5DsccpucnWdpVCMeaI1qEn2DZBFbTLicszwlwuxSy30d7cvNS_Ck][Python’s Execution Time Is Close To C++ And Go Language: Study]] with numba. <2020-01-23 Thu>
** to_sort
- [[http://queirozf.com/archive][queirozf.com python examples]]: very useful examples for many libraries  
* tmp / to_sort
- <2020-02-20 Thu> https://towardsdatascience.com/4-numpy-tricks-every-python-beginner-should-learn-bdb41febc2f2
