#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:t
#+OPTIONS: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+OPTIONS: email:nil f:t inline:t num:t p:nil pri:nil prop:nil stat:t tags:t
#+OPTIONS: tasks:t tex:t timestamp:t title:t toc:t todo:t |:t
#+TITLE: SiScLab_Notes
#+DATE: <2018-11-11 Sun>
#+AUTHOR: Johannes Wasmer
#+EMAIL: johannes@joe-9470m
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 25.2.2 (Org mode 9.1.13)

#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS:
#+LATEX_HEADER:
#+LATEX_HEADER_EXTRA:
#+DESCRIPTION:
#+KEYWORDS:
#+SUBTITLE:
#+LATEX_COMPILER: pdflatex
#+DATE: \today


* [[file:SiScLab_Meetings_Notes.org][Meetings]]
* Tasks
** November: [[file:SiScLab_Task1-PlotBanddos_Notes.org][Task 1 - Plot Banddos]]
** December: Task 2 - GUI 
*** [[file:SiScLab_Task2-BuildModel_Notes.org][Phase 1 - Building the model]]
*** [[file:SiScLab_Task2-BuildABrowser-BasedDashboard.org][Phase 2 - Guide: Build a Browser-based Dashboard in Python]]
*** [[file:SiScLab_Task2-JupyterWidgets_Notes.org][Phase 3 - Setting up & Using Jupyter]]
** January: Task 3 - Alpha Version for Presentation
*** TODO [[file:SiScLab_Task3-JupyterGUICompletion_Notes.org][Phase 4 - Jupyter GUI Completion]]
*** TODO [[file:SiScLab_Task3-Presentation_Notes.org][Phase 5 - Presentation]]
** February: Task 4 - Beta Version & Report
*** Phase 6 - Report & Finishing Touches
**** [[file:~/Desktop/Studium/Kurse_RWTH/SiScLab/18W/repos/masci-tools/studentproject18w/doc/report/report.tex][report.tex main file]]
*** Phase 7 - Code-Ãœbergabe
**** [[file:SiScLab_Task4_Deployment.org][Phase 7 - Deployment]] 
* Tools Install & Setup
** [[file:SiScLab_Git_Notes.org][Git Notes]]
** [[file:SiScLab_AiiDa_Installation_Notes.org][AiiDa Installation Notes]]
* [[file:SiScLab_SideNotes.org][Side Notes]] (ideas, thoughts to sort)
* [[file:SiScLab_Scratch_Notes.org][Scratch Book]]
* to_sort
** Links
<2019-02-21 Thu>: Fleur and Spex code IS publicly availabe, as well as the docs! The judft.de homepage is just awful.
- https://iffgit.fz-juelich.de/fleur/fleur/ fleur git repo
- http://www.flapw.de/pm/index.php?n=User-Documentation.FLEUR fleur docs
- https://spex.readthedocs.io spex docs
- http://www.flapw.de/pm/index.php?n=User-Documentation.Tutorial-DFT-Lecture-2018-DAY11#Choosing_Orbitals
  stefans MATLAB tool, our project code's predecessor


<2019-02-18 Mon>: fileupload instead filechooser for remote-hosting
- https://github.com/peteut/ipython-file-upload used in aiidalab_widgets:
  https://github.com/aiidalab/aiidalab-widgets-base/blob/master/aiidalab_widgets_base/structures.py:
  use this as basis for defining my dashboard as one widget!!!
- and this https://github.com/aiidalab/aiidalab-units

<2019-02-17 Sun>: overlooked jupyter dashboard deployment options
- overlooked stuff in https://github.com/markusschanta/awesome-jupyter#renderingpublishingconversion:
  - https://www.nbinteract.com/: Create interactive webpages from Jupyter notebooks.
  - https://getnikola.com/ Static Site Generator that converts notebooks into websites.
  - https://github.com/SimonBiggs/scriptedforms Quickly create live-update GUIs
    for Python packages using Markdown and simple HTML elements.

<2019-02-17 Sun>: notebooks as modules, functions, part of pipelines:
- https://github.com/tritemio/nbrun
- https://github.com/takluyver/nbparameterise
- https://github.com/nteract/papermill

<2019-02-17 Sun>: more useful jupyterlab stuff:
- https://github.com/mauhai/awesome-jupyterlab
- https://pylantern.readthedocs.io/en/latest/quickstart.html similar project: a
  generic interface for plotting in jupyter using different plot libaries as
  'plot backends'. the author's other projects: http://tim.paine.nyc/
- https://github.com/vidartf/jupyterlab_discovery: manage and discover extensions within jupyterlab as sidetab




** Code <2019-02-22 Fri>
from emacs *scratch*
#+BEGIN_EXAMPLE
# Binder Demo


## Find masci-tools folder

Since `studentproject18ws` is not installed as a module, need to add it manually.
Since we're not local but on mybinder.org, we don't know the absolute path.
So assume that we're in a subfolder of studentproject18ws and go up until we find the folder that contains it. That must be the `masci-tools` folder.



import os

dir_masci = None
dir_here = os.getcwd()
dir_stupro = "studentproject18w"
found_dir_masci = True

if dir_stupro not in os.listdir():
    found_dir_masci = False
    while os.getcwd() != "/":
        if dir_stupro in os.listdir():
            found_dir_masci = True
            break
        os.chdir("..")

if found_dir_masci:
    dir_masci = os.getcwd()
else:
    raise ImportError("Did not find masci-tools/studentproject18ws. If not installed as module, need location of this folder.")



import sys

# Adjust to your local masci-tools path!
path_mtools = dir_masci
if path_mtools not in sys.path:
    # add only once
    sys.path.append(path_mtools)



### 2018 ############################################

# NO DOS file:
figure_title = "Si + C defect"
filename = 'banddos.hdf'
filenames_dos = []

# # # NO DOS file:
# figure_title = "Sodium"
# filename = 'banddos_sodium.hdf'
# filenames_dos = []

# # 2 DOS files:
# figure_title = "Co conductor"
# filename = os.path.join('Co', 'banddos_Co.hdf')
# filenames_dos = [os.path.join('Co', 'DOS.1'), os.path.join('Co', 'DOS.2')]




# Setup
...



filepath = ['studentproject18w', 'binder_test_data', filename]
filepath = os.path.join(*filepath)
filepaths_dos = [['..', '..', '..', 'data', 'input', fd] for fd in filenames_dos]
filepaths_dos = [os.path.join(*fpd) for fpd in filepaths_dos]

data = None
reader = Reader(filepath=filepath)
with reader as h5file:
    data = reader.read(recipe=Recipes.FleurBands)
    #
    # Note:
    # Inside the with statement (context manager),
    # all data attributes that are type h5py Dataset are available (in-file access)
    # When the statement is left,the HDF5 file gets closed and the datasets are closed.
    #
    # Use data outside the with-statement (in-memory access: all HDF5 datasets converted to numpy ndarrays):
    data.move_datasets_to_memory()
#+END_EXAMPLE
